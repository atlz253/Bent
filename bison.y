 // В данном файле описан синтаксический анализатор, который будет сгенерирован при помощи bison.
 // С помощью синтаксический анализатора мы сможем проверить грамматику нашего языка.

 //
 // Строки, заключенные в %{%}, скопируются напрямую в сгенерированный парсер
 //

%{
    #include <stdio.h>
    #include <windows.h>
    
    #include "print.h"
%}

 // Объявление токена - десятичного числа
%token NUM

 // Разделитель области объявлений и области правил грамматики
%%

 // Результат вычислений
EVALUATE: EXPR          { 
                            printf("Итоговый результат: %d\n", $$); 
                        } 
;

 // Операции с низким приоритетом (обрабатываем сложение и вычитание)
EXPR:     TERM
        | EXPR '+' TERM { 
                            $$ = $1 + $3;

                            debug_print("[Синтаксический анализатор] обработка действия %d + %d = %d\n", $1, $3, $$); 
                        }

        | EXPR '-' TERM { 
                            $$ = $1 - $3;

                            debug_print("[Синтаксический анализатор] обработка действия %d - %d = %d\n", $1, $3, $$); 
                        }
;

 // Операции с высоким приоритетом (сначала обрабатываем умножение и деление)
TERM:     NUM
        | TERM '*' NUM  {
                            $$ = $1 * $3;

                            debug_print("[Синтаксический анализатор] обработка действия %d * %d = %d\n", $1, $3, $$); 
                        }

        | TERM '/' NUM  {
                            $$ = $1 / $3;

                            debug_print("[Синтаксический анализатор] обработка действия %d / %d = %d\n", $1, $3, $$); 
                        }
;

%%

 // Точка входа в сгенерированный анализатор
int main()
{
    SetConsoleOutputCP(CP_UTF8);

    yyparse();
   
    return 0;
}