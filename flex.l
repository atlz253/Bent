 // В данном файле описан лексический анализатор, который будет сгенерирован при помощи flex.
 // С помощью лексического анализатора мы сможем разбирать входной код на минимальные едицы языка - лексемы.

 //
 // Строки, заключенные в %{%}, скопируются напрямую в сгенерированный парсер
 //

%{
    #include "bison.tab.h"
    #include "print.h"
%}

 //
 // Опции генератора
 //

 // Создать переменную int yylineno, в которой будет храниться номер текущей строки (удобна для отладки)
%option yylineno

%option noyywrap

 // разделитель области объявлений и области правил языка
%%

 // Правила языка
 // В каждом правиле слева пишется регулярное выражение, справа — код на С

[/][/].*\n      ; // Если встретили комментарий, то ничего не делаем

[0-9]+          { // Обработка найденных чисел
                    yylval = atoi(yytext);
                  
                    debug_print("[Лексический анализатор] найдена числовая лексема: %d\n", yylval);

                    return NUM;  
                }

[ \t\r\n]       ; // Игнорируем проблемы и переходы на новую строку

.               { 
                    debug_print("[Лексический анализатор] найдена символьная лексема: %c\n", *yytext);

                    return *yytext; 
                }

%%

// Точка входа в сгенерированный анализатор
//int main()
//{
//  SetConsoleOutputCP(CP_UTF8);
//
//  yylex();
//
//  return 0;
//}